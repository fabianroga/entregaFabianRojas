{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\lipi y lala\\\\Documents\\\\CERTIFIED_TECH_DEVELOPER\\\\FRONT_III\\\\examen\\\\entregable-frontend-3-junio22\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// El componente App es el padre de:\n// - Cabecera\n// - Listado\n// ESTADO: App debe manejar en su estado un número para contabilizar el total de elementos comprados.\n// MÉTODOS: App debe tener un método para aumentar este número y que pueda ser ejecutado por su nieto Item.\n// PROPS: App deberá pasar por props lo necesario a sus componenetes internos.\nimport Cabecera from \"./components/Cabecera\";\nimport Listado from \"./components/Listado\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [cantidadCompras, setcantidadCompras] = useState(0); // el e y e.preventDefault se utiliza mas en el recargo de la pagina \n\n  function aumentar() {\n    const cantidad = cantidadCompras + 1;\n    setcantidadCompras(cantidad);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Cabecera, {\n      numeroTotalCompras: cantidadCompras\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Listado, {\n      contador: aumentar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"peOfL7uHXNFVtH7SpTahlPX3JKE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cabecera","Listado","useState","App","cantidadCompras","setcantidadCompras","aumentar","cantidad"],"sources":["D:/Users/lipi y lala/Documents/CERTIFIED_TECH_DEVELOPER/FRONT_III/examen/entregable-frontend-3-junio22/src/App.js"],"sourcesContent":["// El componente App es el padre de:\r\n// - Cabecera\r\n// - Listado\r\n// ESTADO: App debe manejar en su estado un número para contabilizar el total de elementos comprados.\r\n// MÉTODOS: App debe tener un método para aumentar este número y que pueda ser ejecutado por su nieto Item.\r\n// PROPS: App deberá pasar por props lo necesario a sus componenetes internos.\r\n\r\nimport Cabecera from \"./components/Cabecera\";\r\nimport Listado from \"./components/Listado\";\r\nimport { useState} from \"react\";\r\n\r\nfunction App() {\r\n\r\n  const [cantidadCompras,setcantidadCompras] = useState(0);\r\n\r\n  // el e y e.preventDefault se utiliza mas en el recargo de la pagina \r\n  function aumentar(){\r\n    const cantidad = cantidadCompras + 1;\r\n    setcantidadCompras(cantidad);\r\n\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Cabecera numeroTotalCompras = {cantidadCompras} />\r\n      <Listado contador = {aumentar} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAwB,OAAxB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,eAAD,EAAiBC,kBAAjB,IAAuCH,QAAQ,CAAC,CAAD,CAArD,CAFa,CAIb;;EACA,SAASI,QAAT,GAAmB;IACjB,MAAMC,QAAQ,GAAGH,eAAe,GAAG,CAAnC;IACAC,kBAAkB,CAACE,QAAD,CAAlB;EAED;;EAAA;EAGD,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,QAAD;MAAU,kBAAkB,EAAIH;IAAhC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAS,QAAQ,EAAIE;IAArB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GAlBQH,G;;KAAAA,G;AAoBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}